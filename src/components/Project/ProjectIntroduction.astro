---
import { getCollection } from 'astro:content';

export interface Props {
  technologies: string[];
  services: string[];
  site?: string;
}

const content = Astro.props;

const technologies = (await getCollection('technology', (technology) => content.technologies.includes(technology.data.title)))
  .reduce((acum, technology) => {
    acum[technology.data.title] = technology.id;
    return acum;
  }, {} as Record<string, string>);
---

<section class="portfolio_item__summary">
  <h2 class="visually-hidden">Pr√©sentation du projet</h2>
  <slot />
  <div>
    <h3 id="project-summary-technologies-label">Technologies</h3>
    <ul aria-labelledby="project-summary-technologies-label">
      {content.technologies.map(projectTechnology => {
        if (technologies[projectTechnology]) {
          return (
            <li>
              <a href={`/technologie/${technologies[projectTechnology]}`} title={`Voir tous les projets utilisant ${projectTechnology}`}>{projectTechnology}</a>
            </li>
            )
        } else {
          return (<li>{projectTechnology}</li>)
        }
      })}
    </ul>
  </div>
  <div>
    <h3 id="project-summary-services-label">Services</h3>
    <ul aria-labelledby="project-summary-services-label">
      {content.services.map(service => (
        <li>{service}</li>
      ))}
    </ul>
  </div>
  {content.site && (
    <div>
      <h3>Voir le projet</h3>
      <p><span class="visually-hidden">Le projet est disponible sur&nbsp;</span><a href={content.site} rel="noopener" target="_blank">{content.site.replace(/https:\/\//, '')}</a></p>
    </div>
  )}
</section>
