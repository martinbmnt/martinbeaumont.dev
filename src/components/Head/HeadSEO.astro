---
import { SITE, OPEN_GRAPH } from '../../config';
import { getCanonicalURL } from '../../util';

export interface Props {
  title: string;
  description?: string;
  image?: {
    src?: string;
    alt?: string;
  };
  articleSection?: string | boolean;
  publishDate?: string;
  updateDate?: string | false;
}

const canonicalURL = getCanonicalURL(Astro.site.host, Astro.url.pathname.replace(/\.html/, ''));
const content = Astro.props as Props;

const formattedContentTitle = content.title ? `${content.title} â€“ ${SITE.title}` : SITE.title;
const imageSrc = content?.image?.src ?? OPEN_GRAPH.image.src;
console.log(imageSrc);
const canonicalImageSrc = imageSrc ? new URL(imageSrc, Astro.site) : null;
const imageAlt = content?.image?.alt ?? OPEN_GRAPH.image.alt;
---

<title>{formattedContentTitle}</title>
<meta name="description" content={content.description ? content.description : SITE.description} />
<link rel="canonical" href={canonicalURL} />
<link rel="sitemap" href="/sitemap-index.xml" />
<meta name="robots" content="follow, index, max-snippet:-1, max-image-preview:large" />
<meta property="og:title" content={formattedContentTitle} />
<meta property="og:type" content={content.articleSection ? 'article' : 'website'} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:locale" content={SITE.language} />
{(typeof content.articleSection === 'string') && (
  <meta property="article:author" content={`https://facebook.com/${OPEN_GRAPH.facebook}`} />
  <meta property="article:section" content={content.articleSection} />
)}
{content.articleSection && content.publishDate && (<meta property="article:published_time" content={content.publishDate} />)}
{content.articleSection && content.updateDate && (<meta property="article:modified_time" content={content.updateDate} />)}
{canonicalImageSrc && (
  <meta property="og:image" content={canonicalImageSrc} />
  <meta property="og:image:width" content={content.image ? '1200' : '800'} />
  <meta property="og:image:height" content={content.image ? '600' : '800'} />
)}
{imageAlt && <meta property="og:image:alt" content={imageAlt} />}
<meta property="og:description" content={content.description ? content.description : SITE.description} />
<meta property="og:site_name" content={OPEN_GRAPH.site_name} />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={formattedContentTitle} />
<meta name="twitter:description" content={content.description ? content.description : SITE.description} />
<meta name="twitter:site" content={OPEN_GRAPH.twitter} />
<meta name="twitter:creator" content={OPEN_GRAPH.twitter} />
{canonicalImageSrc && <meta name="twitter:image" content={canonicalImageSrc} />}
{imageAlt && <meta name="twitter:image:alt" content={imageAlt} />}
